l=[1,2,3,4,5]
l[0]#차원내리기

"""
a=1
l=[a,a,a,a]
l2=[l,l,l,l,l]
l3=[l2,l2,l2]
l3[0]==l2
l2[0]==l1
l1[0]==a
l3[0][0][0]==a
"""




l=[1,2,3,4,5]
l2=[l,l,l]
l3=[l2,l2]
print(l3)
print(l3[0])
print(l3[0][0])
print(l3[1][0])



l=[[1,2,3,4],[5,6,7,8]]
print(l[0])
print(l[1])
print(type(l))


l=[2,3,4,5]
print(len(l))
#len은 리스트가 몇칸인지 알 수있다.
#여기서 l[4]는 위치와 주소는 존재하나 읽을 수 없고 값이 존재하지는 않는다.

print()


print(l[0])
print(l[1])
print(l[2])
print(l[3])

print()

print(l[-4])
print(l[-3])
print(l[-2])
print(l[-1])

print()


l=[1,2,3,4,5]
print(l[1:3])
print(l)
#슬라이싱으로 이거 헷갈리니깐 정확히 이해하기!
#슬라이싱으로 새로운 객체를 만들어 내는것이기 때문에 슬라이싱해도 기존값은 남아있다


l=[1,2,3,4,5]
print(l[:3])
print(l[2:])
print(l[-5:-3])
print(l[-4:3])


l=[1,2,3,4,5,6,7,8,9,10]
#l[시작:끝:간격]
print(l[::1])
print(l[::2])
print(l[1::5])
print(l[::-1])
print(l[0:3:-1]) #이경우 시작과 끝의 방향이 왼쪽에서 오른쪽인데 간격이 음수로
# 반대방향이라 값이 안나온다
print(l[3:0:-1]) #이경우 시작과 끝의 방향이 오른쪽에서 왼쪽으로 간격방향과 같아서
# 슬라이싱이 되며 l[3]값인 4부터 l[0]값인 1전까지 반대로 나온다




