a=[1,2,3,4]
b=[1,2,3,4]
print(a == b)
print(a is b)
# a랑 b는 다른 리스트이기에 다른 값 덩어리이라고 보는데
# ==는 객체상 내용이 같은지 아닌지를 보기 때문에 a==b는 트루로 나온다
# is 는 아이디연산자로 같은 객체인지 보기 때문에 a와 b과 다르기 때문에 폴스로나온다.
c=1
d=1
print(c == d)
print(c is d)
print(c is not d)
# is의 부정은 is not을 사용


a=[1,2,3,4]
print(4 in a)
print(7 not in a)
# in 연산자는 어떤 변수에 해당값이 있는지 없는지 알아보는 기능
# in의 부정은 not in을 사용

# is not     not in


tp1=(1,2,3,4)
tp2=(1,2,3,4)
print(tp1==tp2)
print(tp1 is tp2) #이는 트루로 나오게 되는데 실제로는 폴스이다
#이는 3.6최신버전인 파이튜터로 하였을 때 폴스로 나오게 된다.
#파이참에서는 메모리절약을 위해 이 결과가 트루로 나오게되는데 실제는 폴스가 된다.
tp1=tuple[(1,2,3,4)]
tp2=tuple[(1,2,3,4)]
print(tp1==tp2)
print(tp1 is tp2)
#대신에 파이참에서 저렇게 tuple로 기입하게되면 is 아이디연산자 결과가 폴스로 다르다고
#나오게된다. 이는 문자열""도 마찬가지이다. ""를 사용하면 파이참에서 트루로 나오며
#str[]를 쓰게되면 폴스가 나온다.
#결론적으로 리스트나 튜플,문자열이 is를 썻을때 서로 다른것이 맞다.










